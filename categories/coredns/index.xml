<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>coredns on Myki的博客</title>
    <link>https://www.1nth.com/categories/coredns/</link>
    <description>Recent content in coredns on Myki的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 13 Sep 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.1nth.com/categories/coredns/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>kubeadm &#43; Cilium 搭建kubernetes集群</title>
      <link>https://www.1nth.com/post/k8s-network-cilium/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.1nth.com/post/k8s-network-cilium/</guid>
      <description>&lt;p&gt;&lt;a name=&#34;6ed7c9be&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;不得不说的kubeadm&#34;&gt;不得不说的kubeadm&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;kubeadm部署很方便,但是是一个老外写的,使用staticPod(容器)运行的管理组件,镜像都是&lt;code&gt;gcr.io&lt;/code&gt;域名仓库里的。&lt;br /&gt;域名仓库很多docker的人甚至都不知道,docker镜像命名规则是&lt;code&gt;域名/库名/img_name:tag&lt;/code&gt;这种形式,dockerhub上要拉取镜像直接是&lt;code&gt;库名/img_name:tag&lt;/code&gt;这种名字,是因为域名缺省是&lt;code&gt;docker.io&lt;/code&gt;也就是dockerhub上看到的都是这个域名仓库的&lt;br /&gt;常见的域名仓库国外有gcr.io,quay.io,国内的阿里(registry.cn-hangzhou.aliyuncs.com,hangzhou以外还有shenzhen啥的),daocloud.io等等.gcr.io因为位置在国外会拉取不到.国内阿里仓库同步了&lt;code&gt;gcr.io/google_containers&lt;/code&gt;这些镜像,&lt;br /&gt;
&lt;br /&gt;总有人认为kubeadm的容器运行没有二进制运行放心.容器本身就是个隔离受限的进程,另外管理组件都是无状态的,但是他们总感觉不放心。&lt;br /&gt;事实上除了kubelet以外所有组件都可以用容器方式运行,管理组件简单说下就是集群数据存放&lt;code&gt;etcd&lt;/code&gt;数据库里,apiserver去和etcd交互,其他组件和apiserver交互,kubelet调用api去操作docker,其中一些组件也会去操作各个节点的系统设置&lt;br /&gt;ererere
&lt;a name=&#34;ofRxy&#34;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>办公环境下 kubernetes 网络互通方案</title>
      <link>https://www.1nth.com/post/office-env-k8s-network/</link>
      <pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.1nth.com/post/office-env-k8s-network/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;                  +--------------------+              +--------------------+ 
                  |   +------------+   |              |   +------------+   | 
                  |   |            |   |              |   |            |   | 
                  |   |    ConA    |   |              |   |    ConB    |   | 
                  |   |            |   |              |   |            |   | 
                  |   +-----+------+   |              |   +-----+------+   | 
                  |         |veth      |              |         |veth      | 
                  |       wl-A         |              |       wl-B         | 
                  |         |          |              |         |          |
                  +-------node-A-------+              +-------node-B-------+ 
                          |    |                               |    |
                          |    | type1.  in the same lan       |    |
                          |    +-------------------------------+    |
                          |                                         |
                          |      type2. in different network        |
                          |             +-------------+             |
                          |             |             |             |
                          +-------------+   Routers   |-------------+
                                        |             |
                                        +-------------+
从ConA中发送给ConB的报文被nodeA的wl-A接收，根据nodeA上的路由规则，经过各种iptables规则后，转发到nodeB。
如果nodeA和nodeB在同一个二层网段，下一条地址直接就是node-B，经过二层交换机即可到达。
如果nodeA和nodeB在不同的网段，报文被路由到下一跳，经过三层交换或路由器，一步步跳转到node-B。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://oss.1nth.com/images/1nth/calicoNetwork.png?x-oss-process=style/dev&#34; alt=&#34;aliyun_vos_vpc&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>coredns泛域名解析 单域名解析</title>
      <link>https://www.1nth.com/post/coredns_diy/</link>
      <pubDate>Mon, 17 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.1nth.com/post/coredns_diy/</guid>
      <description>&lt;p&gt;###coredns泛域名解析 单域名解析&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>centos7.5下coredns&#43;etcd搭建DNS服务器</title>
      <link>https://www.1nth.com/post/coredns_etcd_install/</link>
      <pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.1nth.com/post/coredns_etcd_install/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#安装etcd&lt;/span&gt;
yum install etcd -y
systemctl start --now etcd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>