<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kubernetes on Myki的博客</title><link>https://www.myki.cn/tags/kubernetes/</link><description>Recent content in kubernetes on Myki的博客</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 18 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.myki.cn/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>kubernetes的configmap格式错乱问题json/yaml格式化</title><link>https://www.myki.cn/post/k8s_configmap_format/</link><pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate><guid>https://www.myki.cn/post/k8s_configmap_format/</guid><description>&lt;h1 id="heading">&lt;/h1></description></item><item><title>kube-event通知</title><link>https://www.myki.cn/post/kube-event/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://www.myki.cn/post/kube-event/</guid><description>&lt;p>k8s事件通知&lt;/p></description></item><item><title>强制删除 Terminating 状态的 namespace</title><link>https://www.myki.cn/post/k8s-delete-namespace/</link><pubDate>Wed, 18 Aug 2021 00:00:00 +0000</pubDate><guid>https://www.myki.cn/post/k8s-delete-namespace/</guid><description>&lt;blockquote>
&lt;p>有时候删除命名空间后，发现命名空间一直处于 Terminating 状态。通过执行 kubectl delete namespace ${namespace} &amp;ndash;force &amp;ndash;grace-period=0 强制删除命令依然无法删除。&lt;/p>
&lt;/blockquote></description></item><item><title>kubernetes导出</title><link>https://www.myki.cn/post/k8s_yaml_export/</link><pubDate>Thu, 04 Mar 2021 00:00:00 +0000</pubDate><guid>https://www.myki.cn/post/k8s_yaml_export/</guid><description>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">在 k8s 中导出&lt;span class="o">(&lt;/span>kubectl get xx -o yaml&lt;span class="o">)&lt;/span>资源描述信息时，会带出一些k8s系统添加的信息，但这些都不是我们需要的信息，官方没有提供过滤的选项，在下面我给出了几种方式来处理这种情况。
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>使用k8s踩过的坑,优化记录 (持续交作业)</title><link>https://www.myki.cn/post/k8s_issues/</link><pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate><guid>https://www.myki.cn/post/k8s_issues/</guid><description>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">k8s v1.18.3 &lt;span class="o">(&lt;/span>dev 二进制安装&lt;span class="o">)&lt;/span>
k8s v1.19.4 &lt;span class="o">(&lt;/span>线上 kubeadm安装&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>基于libfaketime修改容器时间(不修改宿主机)</title><link>https://www.myki.cn/post/pod_time_modify/</link><pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate><guid>https://www.myki.cn/post/pod_time_modify/</guid><description>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">因业务订单需要生成报表需要修改单个k8s的单个pod时间,而且不影响其他业务得使用
之前测试alpine时发现兼容性不好，ubuntu验证正常
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>使用kubectl patch更新API对象</title><link>https://www.myki.cn/post/kubectl_path_update/</link><pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate><guid>https://www.myki.cn/post/kubectl_path_update/</guid><description>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">测试环境因为开发频繁更新pod,直接更新yaml文件感觉太繁琐,
而且因为环境问题既有Jenkins发版,也有gitlab发版
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>linux服务器强制重启</title><link>https://www.myki.cn/post/linux-reboot-force/</link><pubDate>Thu, 24 Dec 2020 00:00:00 +0000</pubDate><guid>https://www.myki.cn/post/linux-reboot-force/</guid><description>&lt;p>Linux使用shutdown -r now 或者 reboot、init 6 命令无法重启时使用以下两条命令可强制重启：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="nb">echo&lt;/span> &lt;span class="m">1&lt;/span> &amp;gt; /proc/sys/kernel/sysrq
&lt;span class="nb">echo&lt;/span> b &amp;gt; /proc/sysrq-trigger
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>K8S部署Kafka(K8S外部可访问) NodePort 集群外访问</title><link>https://www.myki.cn/post/kafka-install-k8s/</link><pubDate>Wed, 30 Sep 2020 00:00:00 +0000</pubDate><guid>https://www.myki.cn/post/kafka-install-k8s/</guid><description>&lt;h4 id="环境信息">环境信息&lt;/h4>
&lt;p>本次实战的操作系统和软件的版本信息如下：&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-Bash" data-lang="Bash">env:
Kubernetes：1.18
Kubernetes宿主机：CentOS Linux release 7.7.1908
NFS服务：IP地址192.168.1.43，动态存储卷 storageClass: &lt;span class="s2">&amp;#34;nfs-client&amp;#34;&lt;/span>
Helm：3.2.2
Kafka：2.0.1
Zookeeper：3.5.5
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>国内拉取google kubernetes镜像 同步镜像sync</title><link>https://www.myki.cn/post/images-sync-travis/</link><pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate><guid>https://www.myki.cn/post/images-sync-travis/</guid><description>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">私有仓库拉取kubernetes镜像
同步到dockerhub或者阿里云仓库
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>解决kubernetes:v1.18.9 get cs127.0.0.1 connection refused错误</title><link>https://www.myki.cn/post/k8s-cs-unhealthy/</link><pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate><guid>https://www.myki.cn/post/k8s-cs-unhealthy/</guid><description>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">kubectl get cs
NAME STATUS MESSAGE ERROR
scheduler Unhealthy Get http://127.0.0.1:10251/healthz: dial tcp 127.0.0.1:10251: connect: connection refused
controller-manager Unhealthy Get http://127.0.0.1:10252/healthz: dial tcp 127.0.0.1:10252: connect: connection refused
etcd-0 Healthy {&amp;#34;health&amp;#34;:&amp;#34;true&amp;#34;}
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Kubeadm证书过期时间调整</title><link>https://www.myki.cn/post/kubeadm-ssl-update/</link><pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate><guid>https://www.myki.cn/post/kubeadm-ssl-update/</guid><description>&lt;p>&lt;a name="6ed7c9be">&lt;/a>
kubeadm 默认证书为一年，一年过期后，会导致api service不可用，使用过程中会出现：&lt;code>x509: certificate has expired or is not yet valid&lt;/code>&lt;/p></description></item><item><title>kubeadm + Cilium 搭建kubernetes集群</title><link>https://www.myki.cn/post/k8s-network-cilium/</link><pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate><guid>https://www.myki.cn/post/k8s-network-cilium/</guid><description>&lt;p>&lt;a name="6ed7c9be">&lt;/a>&lt;/p>
&lt;h2 id="不得不说的kubeadm">不得不说的kubeadm&lt;/h2>
&lt;p>&lt;br />kubeadm部署很方便,但是是一个老外写的,使用staticPod(容器)运行的管理组件,镜像都是&lt;code>gcr.io&lt;/code>域名仓库里的。&lt;br />域名仓库很多docker的人甚至都不知道,docker镜像命名规则是&lt;code>域名/库名/img_name:tag&lt;/code>这种形式,dockerhub上要拉取镜像直接是&lt;code>库名/img_name:tag&lt;/code>这种名字,是因为域名缺省是&lt;code>docker.io&lt;/code>也就是dockerhub上看到的都是这个域名仓库的&lt;br />常见的域名仓库国外有gcr.io,quay.io,国内的阿里(registry.cn-hangzhou.aliyuncs.com,hangzhou以外还有shenzhen啥的),daocloud.io等等.gcr.io因为位置在国外会拉取不到.国内阿里仓库同步了&lt;code>gcr.io/google_containers&lt;/code>这些镜像,&lt;br />
&lt;br />总有人认为kubeadm的容器运行没有二进制运行放心.容器本身就是个隔离受限的进程,另外管理组件都是无状态的,但是他们总感觉不放心。&lt;br />事实上除了kubelet以外所有组件都可以用容器方式运行,管理组件简单说下就是集群数据存放&lt;code>etcd&lt;/code>数据库里,apiserver去和etcd交互,其他组件和apiserver交互,kubelet调用api去操作docker,其中一些组件也会去操作各个节点的系统设置&lt;br />ererere
&lt;a name="ofRxy">&lt;/a>&lt;/p></description></item><item><title>kubeadm集群备份恢复etcd</title><link>https://www.myki.cn/post/etcd_backup_kubeadm/</link><pubDate>Fri, 21 Aug 2020 00:00:00 +0000</pubDate><guid>https://www.myki.cn/post/etcd_backup_kubeadm/</guid><description>&lt;p>kubeadm集群备份恢复etcd
&lt;img src="https://oss.1nth.com/images/1nth/etcd_backup_kubeadm.jpg?x-oss-process=style/dev" alt="aliyun_vos_vpc">&lt;/p></description></item><item><title>办公环境下 kubernetes 网络互通方案</title><link>https://www.myki.cn/post/office-env-k8s-network/</link><pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate><guid>https://www.myki.cn/post/office-env-k8s-network/</guid><description>&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback"> +--------------------+ +--------------------+
| +------------+ | | +------------+ |
| | | | | | | |
| | ConA | | | | ConB | |
| | | | | | | |
| +-----+------+ | | +-----+------+ |
| |veth | | |veth |
| wl-A | | wl-B |
| | | | | |
+-------node-A-------+ +-------node-B-------+
| | | |
| | type1. in the same lan | |
| +-------------------------------+ |
| |
| type2. in different network |
| +-------------+ |
| | | |
+-------------+ Routers |-------------+
| |
+-------------+
从ConA中发送给ConB的报文被nodeA的wl-A接收，根据nodeA上的路由规则，经过各种iptables规则后，转发到nodeB。
如果nodeA和nodeB在同一个二层网段，下一条地址直接就是node-B，经过二层交换机即可到达。
如果nodeA和nodeB在不同的网段，报文被路由到下一跳，经过三层交换或路由器，一步步跳转到node-B。
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://oss.1nth.com/images/1nth/calicoNetwork.png?x-oss-process=style/dev" alt="aliyun_vos_vpc">&lt;/p></description></item><item><title>consul安装使用 做prometheus的配置中心</title><link>https://www.myki.cn/post/consul_install/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>https://www.myki.cn/post/consul_install/</guid><description>&lt;p>consul 容器化&lt;/p></description></item><item><title>kubernetes 1.17.0安装在centos8 安装体验</title><link>https://www.myki.cn/post/k8s_bin_centos8_install/</link><pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate><guid>https://www.myki.cn/post/k8s_bin_centos8_install/</guid><description>&lt;p>&lt;code>centos8 &lt;/code>centos8.1刚刚发布 闲来没事体验一波&lt;/p></description></item><item><title>centos8 安装体验install</title><link>https://www.myki.cn/post/centos8_install/</link><pubDate>Fri, 17 Jan 2020 00:00:00 +0000</pubDate><guid>https://www.myki.cn/post/centos8_install/</guid><description>&lt;p>&lt;code>centos8 &lt;/code>centos8.1刚刚发布 闲来没事体验一波&lt;/p></description></item><item><title>centos7安装定制 kubernetes安装准备环境</title><link>https://www.myki.cn/post/centos7_install_optimiz/</link><pubDate>Mon, 23 Dec 2019 00:00:00 +0000</pubDate><guid>https://www.myki.cn/post/centos7_install_optimiz/</guid><description>&lt;p>&lt;code>centos&lt;/code>&lt;/p></description></item></channel></rss>